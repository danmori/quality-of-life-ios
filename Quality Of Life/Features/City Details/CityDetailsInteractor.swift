//
//  CityDetailsInteractor.swift
//  Quality Of Life
//
//  Created by Dan Mori on 06/07/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CityDetailsBusinessLogic {
    func loadCityDetails(request: CityDetails.LoadCityDetails.Request)
}

protocol CityDetailsDataStore {
    var cityId: String { get set }
    var cityInformations: CityInformations? { get set }
}

class CityDetailsInteractor: CityDetailsBusinessLogic, CityDetailsDataStore {
    var presenter: CityDetailsPresentationLogic?
    var worker: CityDetailsWorker?
    var cityId: String = ""
    var service: ServiceProvider?
    var cityInformations: CityInformations?
    
    init(withServiceProvider service: ServiceProvider) {
        self.service = service
    }
    
    func loadCityDetails(request: CityDetails.LoadCityDetails.Request) {
        service?.getCityDetails(cityId: cityId) {
            switch $0 {
            case .failure(_):
                break
            case let .success(response):
                self.cityInformations = response.cityInformations
                guard let cityInformations = self.cityInformations else { return }
                let r = CityDetails.LoadCityDetails.Response(name: cityInformations.name, fullName: cityInformations.fullName, population: cityInformations.population)
                self.presenter?.presentCityDetails(response: r)
                break
            }
        }
    }
}
